// Proto file representing the EDB Database class

syntax = "proto3";

package ansys.api.edb.v1;

import "ansys/api/edb/v1/edb_messages.proto";
import "ansys/api/edb/v1/bondwire.proto";
import "ansys/api/edb/v1/definition_obj.proto";

enum AccessLevel {
  ACCESS_LEVEL_NO_ACCESS = 0;
  ACCESS_LEVEL_READ_ACCESS = 1;
  ACCESS_LEVEL_WRITE_ACCESS = 2;
}

service DatabaseService {
  // summary: Creates a database
  rpc Create (google.protobuf.StringValue) returns (EDBObjMessage) {}

  // summary: Opens a database
  rpc Open (OpenDatabaseMessage) returns (EDBObjMessage) {}

  // summary: Deletes a database
  rpc Delete (google.protobuf.StringValue) returns (google.protobuf.Empty) {}

  // summary: Saves a database
  rpc Save (EDBObjMessage) returns (google.protobuf.Empty) {}

  // summary: Closes a database
  rpc Close (EDBObjMessage) returns (google.protobuf.Empty) {}

  // summary: Determines whether the database is read only
  // io_flags:
  //   - cache
  rpc IsReadOnly(EDBObjMessage) returns (google.protobuf.BoolValue) {}

  // summary: Gets the top circuits in a database
  // io_flags:
  //   - cache
  rpc GetTopCircuits (EDBObjMessage) returns (EDBObjCollectionMessage) {}

  // summary: Streams the top circuits in a database
  rpc StreamTopCircuits (EDBObjMessage) returns (stream EDBObjCollectionMessage) {}

  // summary: Gets the id of a database
  // io_flags:
  //   - cache
  rpc GetId (EDBObjMessage) returns (google.protobuf.Int64Value) {}

  // summary: Finds a database with the provided id
  // io_flags:
  //   - cache
  rpc FindById (google.protobuf.Int64Value) returns (EDBObjMessage) {}

  // summary: Save the database to new location and optionally to older edb version
  rpc SaveAs (SaveAsDatabaseMessage) returns (google.protobuf.Empty) {}

  // summary: Get EDB version by release name
  // io_flags:
  //   - cache
  rpc GetVersionByRelease (google.protobuf.StringValue) returns (google.protobuf.StringValue) {}

  // summary: Get the directory of the Database
  // io_flags:
  //   - cache
  rpc GetDirectory (EDBObjMessage) returns (google.protobuf.StringValue) {}

  // summary: Get the product property of the Database
  // io_flags:
  //   - cache
  rpc GetProductProperty(GetProductPropertyMessage) returns (google.protobuf.StringValue) {}

  // summary: Set the product property of the Database
  // io_flags:
  //   - buffer
  rpc SetProductProperty(SetProductPropertyMessage) returns (google.protobuf.Empty) {}

  // summary: Get the product property ids of the Database
  // io_flags:
  //   - cache
  rpc GetProductPropertyIds(GetProductPropertyIdsMessage) returns (ProductPropertyIdsMessage) {}

  // summary: Get the product property ids of the Database
  rpc ImportMaterialFromControlFile(ImportMaterialFromControlFileMessage) returns (google.protobuf.Empty) {}

  // summary: Get the version of the Database
  // io_flags:
  //   - cache
  rpc GetVersion(EDBObjMessage) returns (GetVersionMessage) {}

  // summary: Scale the geometry of the Database
  // io_flags:
  //   - buffer
  rpc Scale(DoublePropertyMessage) returns (google.protobuf.Empty) {}

  // summary: Get the source of the Database
  // io_flags:
  //   - cache
  rpc GetSource(EDBObjMessage) returns (google.protobuf.StringValue) {}

  // summary: Set the source of the Database
  // io_flags:
  //   - buffer
  rpc SetSource(EDBObjNameMessage) returns (google.protobuf.Empty) {}

  // summary: Get the source version of the Database
  // io_flags:
  //   - cache
  rpc GetSourceVersion(EDBObjMessage) returns (google.protobuf.StringValue) {}

  // summary: Set the source version of the Database
  // io_flags:
  //   - buffer
  rpc SetSourceVersion(EDBObjNameMessage) returns (google.protobuf.Empty) {}

  // summary: copy cells
  rpc CopyCells (CopyCellsMessage) returns (EDBObjCollectionMessage) {}

  // summary: Get defs
  // io_flags:
  //   - cache
  rpc GetDefinitionObjs (GetDefinitionObjsMessage) returns (EDBObjCollectionMessage) {}

  // summary: Stream defs
  rpc StreamDefinitionObjs (GetDefinitionObjsMessage) returns (stream EDBObjCollectionMessage) {}

  // summary: Get top cells
  // io_flags:
  //   - cache
  rpc TopCircuitCells (EDBObjMessage) returns (EDBObjCollectionMessage) {}

  // summary: Get cells
  // io_flags:
  //   - cache
  rpc GetCircuits (EDBObjMessage) returns (EDBObjCollectionMessage) {}

  // summary: Stream cells
  rpc StreamCircuits (EDBObjMessage) returns (stream EDBObjCollectionMessage) {}

  // summary: Get footprint cells
  // io_flags:
  //   - cache
  rpc GetFootprints (EDBObjMessage) returns (EDBObjCollectionMessage) {}

  // summary: Stream footprint cells
  rpc StreamFootprints (EDBObjMessage) returns (stream EDBObjCollectionMessage) {}

}

// Message for Open
message OpenDatabaseMessage {
  string edb_path = 1;
  bool read_only = 2;
}

// Message for SaveAs
message SaveAsDatabaseMessage {
  EDBObjMessage db = 1;
  string new_location = 2;
  string version = 3;
}

// Message for ImportMaterialFromControlFile
message ImportMaterialFromControlFileMessage {
  EDBObjMessage target = 1;
  string file = 2;
  oneof optional_schema_path {
    string schema_path = 3;
  }
  bool append = 4;
}

// Message for GetVersion
message GetVersionMessage {
  EDBInternalIdMessage major = 1;
  EDBInternalIdMessage minor = 2;
}

// Message for CopyCells
message CopyCellsMessage {
  EDBObjMessage target = 1;
  EDBObjCollectionMessage cells = 2;
}

// Message for CopyCells
message GetDefinitionObjsMessage {
  EDBObjMessage target = 1;
  DefinitionObjType type = 2;
  BondwireType subtype = 3;
}